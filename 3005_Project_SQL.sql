CREATE TABLE ORDUR(
	ORDER_NO INT,
	ISBN INT,
	ADDRESS VARCHAR(50),
	PRIMARY KEY (ORDER_NO, ISBN),
	FOREIGN KEY (ORDER_NO) REFERENCES ORDER_OF(ORDER_NO)
);

CREATE TABLE ORDER_OF (
	ORDER_NO SERIAL UNIQUE,
	USERNAME VARCHAR(50),
	PRIMARY KEY(ORDER_NO, USERNAME)
);

CREATE TABLE USERS(
	USERNAME VARCHAR(50) UNIQUE,
	PASSWORD VARCHAR(50),
	ADDRESS VARCHAR(100),
	PRIMARY KEY (USERNAME)
);

CREATE TABLE CART(
	CART_ID INTEGER UNIQUE,
	PRIMARY KEY(CART_ID)
);

CREATE TABLE CART_OF(
	CART_ID INTEGER,
	USERNAME VARCHAR(50),
	PRIMARY KEY(CART_ID, USERNAME),
	FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME)
);

CREATE TABLE BOOKS(
	ISBN SERIAL UNIQUE,
	TITLE VARCHAR(50),
	AUTHOR VARCHAR(50),
	YEAR INTEGER,
	PRICE NUMERIC(2,0),
	PROFIT_SHARED NUMERIC(2,0),
	PUBLISHER VARCHAR(50),
	PRIMARY KEY(ISBN)
);

CREATE TABLE IN_CART(
	CART_ID INTEGER,
	ISBN INTEGER,
	QUANTITY INTEGER,
	PRIMARY KEY(CART_ID, ISBN),
	FOREIGN KEY(CART_ID) REFERENCES CART(CART_ID)
);

CREATE TABLE PUBLISHER(
	NAME VARCHAR(50),
	ADDRESS VARCHAR(100),
	WEBSITE VARCHAR(100),
	PHONE_NUMBER VARCHAR(10),
	BANKING_ACCOUNT NUMERIC(2,0),
	PRIMARY KEY(NAME)
);

CREATE TABLE PUBLISHER_OF(
	NAME VARCHAR(50),
	ISBN INTEGER,
	PRIMARY KEY(NAME, ISBN),
	FOREIGN KEY(NAME) REFERENCES PUBLISHER(NAME)
);

CREATE TABLE WAREHOUSE(
	W_ID SERIAL UNIQUE,
	ADDRESS VARCHAT(100),
	PRIMARY KEY(W_ID)
);

CREATE TABLE IN_STOCK(
	W_ID INTEGER,
	ISBN INTEGER,
	QUANTITY INTEGER,
	PRIMARY KEY(W_ID, ISBN),
	FOREIGN KEY(W_ID) REFERENCES WAREHOUSE(W_ID)
);